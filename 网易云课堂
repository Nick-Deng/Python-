PYTHON 字符串处理

string.strip([chars]) 方法删除字符串开头和结尾指定的字符或字符序列(即不能删中间字符)。

string.lstrip([chars]) 方法删除字符串开头指定的字符或字符序列(即不能删中间字符)。（l - left - strip 左侧，即开头）

string.rstrip([chars]) 方法删除字符串结尾指定的字符或字符序列(即不能删中间字符)。（r - right - strip 右侧，即结尾）

上面三个函数返回移除字符串string头尾指定的字符生成的新字符串，string本身不会发生改变。

chars  指的是移除字符串头尾指定的字符序列，

          若其为空，则默认删除空白符：\n、\r、\t、' '，即：换行、回车、制表符、空格

          若其不为空时，找出字符串string中头尾部分含有的与chars中所包含的字符相同的字符，然后将这些字符去掉



Python 字符串的加密解密。。。。。。。。。。。。。。。。。。。。

Oh, my god ===> OMG

# Ask for a string
str = input("Convert to Acronym : ")

# Convert the string to all uppercase
str = str.upper()

# Covert the string into a list
list0fWords = str.split()

# Cycle through the list
for word in list0fWords:

    # Print the 1st letter of the word
    print(word[0], end='')
    
    
    
Python 字符串的加密解密。。。。。。。。。。。。。。。。。。

Fly in the sky 加密解密

# Input string to be encrypted
orig_message = input("Enter a string in uppercase: ")

secret_message = ''

# cycle through each character in the string
for char in orig_message:
    # store each character code in secret message
    if char.isalpha():
        secret_message += str(ord(char)-23)
    elif char.isspace():
        secret_message += str(ord(char))

# Print "Secret message: 798798798"
print("Secret message: ", secret_message)

# Cycle through each character code 2 at a time
norm_string = ""

for i in range(0, len(secret_message)-1, 2):
    # Convert the code into characters and add them to the string
    char_code = secret_message[i] + secret_message[i + 1]
    if char_code != '32':
        norm_string += chr(int(char_code) + 23)
    else:
        norm_string += chr(int(char_code))
# Print the string
print("Original message: ", norm_string)
    
